import { ArrowLeft, Info, ShoppingCart, Star, Trash2, Check } from "lucide-react";
import { toast } from "@/hooks/use-toast";
import { Product, Category, LessonState, EnvironmentalImpact } from "../";
import { useState, useEffect } from "react";

const EcoVivaLesson = () => {
  // ===== DATA MODELS =====
  // Produtos para o jogo de consumo consciente
  const products: Product[] = [
    {
      id: 1,
      name: "Camiseta de Algod√£o Org√¢nico",
      price: 89.9,
      image: "üëï",
      sustainability: 9,
      badges: ["Org√¢nico", "Com√©rcio Justo"],
      description: "Produzida com algod√£o org√¢nico certificado, sem uso de pesticidas e com pr√°ticas de com√©rcio justo. Esta camiseta tem uma pegada de carbono 60% menor do que camisetas convencionais e utiliza t√©cnicas de tingimento natural.",
      category: 1,
    },
    {
      id: 2,
      name: "Camiseta Comum",
      price: 39.9,
      image: "üëï",
      sustainability: 3,
      badges: [],
      description: "Camiseta comum de algod√£o convencional, produzida com m√©todos tradicionais. O cultivo do algod√£o convencional utiliza grandes quantidades de pesticidas e √°gua, al√©m de pr√°ticas que podem esgotar o solo.",
      category: 1,
    },
    {
      id: 3,
      name: "Sab√£o em P√≥ Biodegrad√°vel",
      price: 28.9,
      image: "üßº",
      sustainability: 8,
      badges: ["Biodegrad√°vel", "Sem Fosfatos"],
      description: "Sab√£o em p√≥ biodegrad√°vel, sem fosfatos e com embalagem recicl√°vel. Este produto utiliza ingredientes que se decomp√µem naturalmente e n√£o contaminam rios e lagos, protegendo a vida aqu√°tica.",
      category: 2,
    },
    {
      id: 4,
      name: "Sab√£o em P√≥ Comum",
      price: 18.9,
      image: "üßº",
      sustainability: 2,
      badges: [],
      description: "Sab√£o em p√≥ convencional com componentes qu√≠micos que podem prejudicar o meio ambiente. Cont√©m fosfatos que contribuem para a eutrofiza√ß√£o de corpos d'√°gua e surfactantes que podem ser t√≥xicos para organismos aqu√°ticos.",
      category: 2,
    },
    {
      id: 5,
      name: "Garrafa Reutiliz√°vel",
      price: 59.9,
      image: "üç∂",
      sustainability: 10,
      badges: ["Reutiliz√°vel", "Livre de BPA"],
      description: "Garrafa de a√ßo inoxid√°vel, dur√°vel e reutiliz√°vel, livre de BPA e outros componentes t√≥xicos. Pode substituir centenas de garrafas pl√°sticas durante sua vida √∫til, reduzindo significativamente o lixo pl√°stico.",
      category: 3,
    },
    {
      id: 6,
      name: "Garrafa de √Ågua Descart√°vel",
      price: 2.5,
      image: "üç∂",
      sustainability: 1,
      badges: [],
      description: "Garrafa de pl√°stico descart√°vel que contribui para a polui√ß√£o por pl√°sticos. Menos de 30% dessas garrafas s√£o recicladas e muitas acabam em aterros sanit√°rios ou nos oceanos, onde podem levar at√© 450 anos para se decompor.",
      category: 3,
    },
    {
      id: 7,
      name: "Frutas Org√¢nicas Locais",
      price: 15.9,
      image: "üçé",
      sustainability: 9,
      badges: ["Org√¢nico", "Local"],
      description: "Frutas cultivadas organicamente por produtores locais, reduzindo a pegada de carbono do transporte. M√©todos de cultivo org√¢nico promovem a sa√∫de do solo, a biodiversidade e eliminam res√≠duos de pesticidas nos alimentos.",
      category: 4,
    },
    {
      id: 8,
      name: "Frutas Importadas",
      price: 25.9,
      image: "üçé",
      sustainability: 4,
      badges: ["Importado"],
      description: "Frutas importadas de outros pa√≠ses, com maior pegada de carbono devido ao transporte. O transporte de alimentos a longas dist√¢ncias contribui significativamente para as emiss√µes de gases de efeito estufa e reduz a frescura dos produtos.",
      category: 4,
    },
    {
      id: 9,
      name: "L√¢mpada LED",
      price: 12.9,
      image: "üí°",
      sustainability: 8,
      badges: ["Econ√¥mica", "Dur√°vel"],
      description: "L√¢mpada LED de baixo consumo energ√©tico e longa dura√ß√£o, reduzindo o desperd√≠cio. Consume at√© 80% menos energia que l√¢mpadas incandescentes e pode durar at√© 25 vezes mais, reduzindo o n√∫mero de l√¢mpadas descartadas.",
      category: 5,
    },
    {
      id: 10,
      name: "L√¢mpada Incandescente",
      price: 3.9,
      image: "üí°",
      sustainability: 2,
      badges: [],
      description: "L√¢mpada incandescente tradicional com alto consumo de energia e vida √∫til curta. Converte apenas 5% da energia que consome em luz, o restante √© perdido como calor, resultando em grande desperd√≠cio energ√©tico.",
      category: 5,
    },
    {
      id: 11,
      name: "Detergente Concentrado",
      price: 15.9,
      image: "üß¥",
      sustainability: 7,
      badges: ["Concentrado", "Menos Embalagem"],
      description: "Detergente concentrado que usa menos √°gua e menos embalagem por lavagem. Uma pequena quantidade proporciona o mesmo poder de limpeza que grandes volumes de produtos convencionais, reduzindo o uso de pl√°stico e os custos de transporte.",
      category: 2,
    },
    {
      id: 12,
      name: "Detergente Comum",
      price: 8.9,
      image: "üß¥",
      sustainability: 3,
      badges: [],
      description: "Detergente comum com mais √°gua em sua composi√ß√£o e mais embalagem por uso. Cont√©m maior quantidade de √°gua em sua formula√ß√£o, o que significa mais embalagens pl√°sticas e maior impacto no transporte por unidade de produto efetivo.",
      category: 2,
    },
  ];

  // Categorias de produtos
  const categories: Category[] = [
    { id: 1, name: "Vestu√°rio", icon: "üëï" },
    { id: 2, name: "Limpeza", icon: "üßº" },
    { id: 3, name: "Utens√≠lios", icon: "üç∂" },
    { id: 4, name: "Alimentos", icon: "üçé" },
    { id: 5, name: "Ilumina√ß√£o", icon: "üí°" },
  ];

  // ===== STATE MANAGEMENT =====
  const [lessonState, setLessonState] = useState<LessonState>({
    cart: [],
    budget: 200,
    remainingBudget: 200,
    sustainabilityScore: 0,
    isCompleted: false,
    score: 0,
  });
  
  const [isLoading, setIsLoading] = useState(true);
  const [selectedCategory, setSelectedCategory] = useState<number | null>(null);
  const [selectedProduct, setSelectedProduct] = useState<number | null>(null);
  const [showInfo, setShowInfo] = useState(false);
  const [animatedIndex, setAnimatedIndex] = useState<number | null>(null);
  const [isInitialLoad, setIsInitialLoad] = useState(true);

  // ===== UTILITY FUNCTIONS =====
  
  // Calculate sustainability score
  const calculateSustainabilityScore = (cart: number[]): number => {
    if (cart.length === 0) return 0;
    
    const sustainabilityTotal = cart.reduce((total, productId) => {
      const product = products.find((p) => p.id === productId);
      return total + (product?.sustainability || 0);
    }, 0);

    return sustainabilityTotal / cart.length;
  };

  // Calculate remaining budget
  const calculateRemainingBudget = (cart: number[]): number => {
    const totalCost = cart.reduce((total, productId) => {
      const product = products.find((p) => p.id === productId);
      return total + (product?.price || 0);
    }, 0);

    return lessonState.budget - totalCost;
  };

  // Calculate environmental impact
  const calculateEnvironmentalImpact = (sustainabilityScore: number): EnvironmentalImpact => {
    return {
      carbonFootprint: Math.max(0, 10 - sustainabilityScore),
      waterSavings: sustainabilityScore * 50,
      wasteReduction: sustainabilityScore * 0.3,
    };
  };

  // Check if lesson is completed
  const checkLessonCompletion = (cart: number[], sustainabilityScore: number): boolean => {
    return cart.length >= 5 && sustainabilityScore >= 7;
  };

  // Get color based on sustainability value
  const getSustainabilityColorClass = (value: number): string => {
    if (value >= 8) return "text-leaf-600";
    if (value >= 6) return "text-nature-600";
    if (value >= 4) return "text-yellow-500";
    if (value >= 2) return "text-orange-500";
    return "text-red-500";
  };

  // Get sustainability stars visual representation
  const getSustainabilityStars = (value: number) => {
    const fullStars = Math.floor(value / 2);
    const halfStar = value % 2 >= 1;
    const emptyStars = 5 - fullStars - (halfStar ? 1 : 0);
    
    return (
      <div className="flex">
        {[...Array(fullStars)].map((_, i) => (
          <Star key={`full-${i}`} className="h-4 w-4 text-yellow-400 fill-yellow-400" />
        ))}
        {halfStar && (
          <div className="relative">
            <Star className="h-4 w-4 text-gray-300" />
            <div className="absolute inset-0 overflow-hidden w-1/2">
              <Star className="h-4 w-4 text-yellow-400 fill-yellow-400" />
            </div>
          </div>
        )}
        {[...Array(emptyStars)].map((_, i) => (
          <Star key={`empty-${i}`} className="h-4 w-4 text-gray-300" />
        ))}
      </div>
    );
  };

  // Get badge color
  const getBadgeColor = (badge: string): string => {
    switch (badge) {
      case "Org√¢nico":
      case "Biodegrad√°vel":
      case "Local":
      case "Reutiliz√°vel":
        return "bg-leaf-100 text-leaf-800 border-leaf-200";
      case "Com√©rcio Justo":
      case "Sem Fosfatos":
      case "Livre de BPA":
        return "bg-water-100 text-water-800 border-water-200";
      case "Econ√¥mica":
      case "Dur√°vel":
      case "Concentrado":
      case "Menos Embalagem":
        return "bg-nature-100 text-nature-800 border-nature-200";
      case "Importado":
        return "bg-orange-100 text-orange-800 border-orange-200";
      default:
        return "bg-gray-100 text-gray-800 border-gray-200";
    }
  };

  // Filter products based on selected category
  const getFilteredProducts = (): Product[] => {
    if (selectedCategory === null) {
      return products;
    }
    return products.filter((product) => product.category === selectedCategory);
  };

  // ===== EVENT HANDLERS =====
  
  // Add product to cart
  const handleAddToCart = (productId: number) => {
    const product = products.find((p) => p.id === productId);
    if (!product) return;

    // Check budget
    if (product.price > lessonState.remainingBudget) {
      toast({
        title: "Or√ßamento insuficiente!",
        description: "Voc√™ n√£o tem or√ßamento suficiente para este produto.",
        variant: "destructive",
      });
      return;
    }

    // Update cart
    setLessonState((prev) => ({
      ...prev,
      cart: [...prev.cart, productId],
    }));

    // Feedback based on sustainability
    if (product.sustainability >= 7) {
      toast({
        title: "Excelente escolha!",
        description: "Este √© um produto com alta sustentabilidade.",
      });
    } else if (product.sustainability >= 4) {
      toast({
        title: "Escolha moderada",
        description: "Este produto tem sustentabilidade m√©dia.",
      });
    } else {
      toast({
        title: "Escolha pouco sustent√°vel",
        description: "Existem alternativas mais sustent√°veis para este produto.",
        variant: "destructive",
      });
    }
  };

  // Remove product from cart
  const handleRemoveFromCart = (productId: number) => {
    setLessonState((prev) => ({
      ...prev,
      cart: prev.cart.filter((id) => id !== productId),
    }));
  };

  // Reset lesson
  const handleReset = () => {
    setLessonState({
      cart: [],
      budget: 200,
      remainingBudget: 200,
      sustainabilityScore: 0,
      isCompleted: false,
      score: 0,
    });
    setSelectedProduct(null);
    setSelectedCategory(null);
  };

  // Handle category selection
  const handleCategorySelect = (categoryId: number | null) => {
    setSelectedCategory(categoryId);
    if (categoryId !== null) {
      setAnimatedIndex(categoryId);
      setTimeout(() => setAnimatedIndex(null), 600);
    }
  };

  // ===== EFFECTS =====
  
  // Simulate loading
  useEffect(() => {
    const timer = setTimeout(() => {
      setIsLoading(false);
    }, 800);
    
    return () => clearTimeout(timer);
  }, []);